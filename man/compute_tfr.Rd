% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tfr_analysis.R
\name{compute_tfr}
\alias{compute_tfr}
\alias{compute_tfr.default}
\alias{compute_tfr.eeg_epochs}
\alias{compute_tfr.eeg_evoked}
\title{Compute Time-Frequency representation of EEG data}
\usage{
compute_tfr(data, ...)

\method{compute_tfr}{default}(data, ...)

\method{compute_tfr}{eeg_epochs}(
  data,
  method = "morlet",
  foi,
  n_freq,
  spacing = "linear",
  n_cycles = 7,
  keep_trials = FALSE,
  output = "power",
  downsample = 1,
  trim_edges = TRUE,
  verbose = TRUE,
  ...
)

\method{compute_tfr}{eeg_evoked}(
  data,
  method = "morlet",
  foi,
  n_freq,
  spacing = "linear",
  n_cycles = 7,
  keep_trials = FALSE,
  output = "power",
  downsample = 1,
  trim_edges = TRUE,
  verbose = TRUE,
  ...
)
}
\arguments{
\item{data}{An object of class \code{eeg_epochs}.}

\item{...}{Further TFR parameters}

\item{method}{Time-frequency analysis method. Defaults to "morlet".}

\item{foi}{Frequencies of interest. Scalar or character vector of the lowest
and highest frequency to resolve.}

\item{n_freq}{Number of frequencies to be resolved. Must be an integer number
of frequencies.}

\item{spacing}{Use "linear" or "log" spacing for the frequency vector and
number of cycles.}

\item{n_cycles}{Number of cycles at each frequency. If a single integer, use
a constant number of cycles at each frequency. If a character vector of
length 2, the number of cycles will scale with frequency from the minimum
to the maximum.}

\item{keep_trials}{Keep single trials or average over them before returning.
Defaults to FALSE.}

\item{output}{Sets whether output is power, phase, or fourier coefficients.}

\item{downsample}{Downsampling factor. Integer. Selects every n samples after
performing time-frequency analysis on the full sampling rate data.}

\item{trim_edges}{Remove edges of time-frequency representation to avoid edge
effects from overlap of wavelet with timepoints outside the epochs.
Defaults to TRUE.}

\item{verbose}{Print informative messages in console.}
}
\value{
An object of class \code{eeg_tfr}
}
\description{
This function creates a time frequency representation of EEG time series
data. Currently, it is possible to use either Morlet wavelets or Hanning
tapers during the decomposition, which uses convolution in the frequency
domain.
}
\section{Methods (by class)}{
\itemize{
\item \code{compute_tfr(default)}: Default method for compute_tfr

\item \code{compute_tfr(eeg_epochs)}: Default method for \code{compute_tfr}

\item \code{compute_tfr(eeg_evoked)}: Method for \code{eeg_evoked} objects.

}}
\examples{
out <- compute_tfr(demo_epochs, method = "morlet", foi = c(4, 30), n_freq = 10, n_cycles = 3)
out
out$freq_info$morlet_resolution
out <- compute_tfr(demo_epochs, method = "morlet", foi = c(4, 30),
 n_freq = 10, n_cycles = c(3, 10))
out$freq_info$morlet_resolution
plot_tfr(out)
out <- compute_tfr(demo_epochs, method = "morlet", foi = c(4, 30),
 n_freq = 10, n_cycles = c(3, 10), trim_edges = FALSE)
plot_tfr(out)
}
\author{
Matt Craddock \email{matt@mattcraddock.com}
}
